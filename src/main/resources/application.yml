# 设置应用程序端口
server:
  port: 8080

#${} 括号中可以解析表达式， :可以加一个默认值,如果前面表达式不能解析，那么会使用默认值
person:
 name: liming
 age: ${person.dog.age:10000}
 sex: 1
 email: shenghail@qq.com
 list:
  - lisi
  - zhangsan
 map: {key1: val1, key2: val2}
 dog:
  name: 小黑
  age: 2

# 设置生效的配置文件
spring:
  profiles:
    active: dev
#连接数据库
  datasource:
    password: 123456
    username: root
#连接到docker中的MySQL
    url: jdbc:mysql://111.230.169.249:3307/springboot
#可以执行脚本
#    schema:
#     - classpath:employee.sql
#     - classpath:department.sql
#设置datasource为Druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
#数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true

# 启动debug模式，可以打印出自动匹配报告，列出已启用的自动配置
#debug: true

logging:
  file:
#指定日志路径
    path: D:\
#设置日志级别
  level.com.shl: debug

#配置mybatis配置文件路径和mapper路径
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml

